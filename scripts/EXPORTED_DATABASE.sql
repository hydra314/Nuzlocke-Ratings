-- phpMyAdmin SQL Dump
-- version 4.8.3
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Jan 05, 2019 at 08:34 PM
-- Server version: 10.1.37-MariaDB
-- PHP Version: 7.2.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `nrs`
--

-- --------------------------------------------------------

--
-- Table structure for table `basegame`
--

CREATE TABLE `basegame` (
  `basegame_id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `generation` tinyint(1) NOT NULL,
  `region` enum('Kanto','Johto','Hoenn','Sinnoh','Unova','Kalos','Alola') NOT NULL,
  `difficulty` tinyint(1) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `basegame`
--

INSERT INTO `basegame` (`basegame_id`, `name`, `generation`, `region`, `difficulty`) VALUES
(1, 'Red', 1, 'Kanto', 2),
(2, 'Blue', 1, 'Kanto', 2),
(3, 'Yellow', 1, 'Kanto', 2),
(4, 'Gold', 2, 'Johto', 1),
(5, 'Silver', 2, 'Johto', 1),
(6, 'Crystal', 2, 'Johto', 1),
(7, 'Ruby', 3, 'Hoenn', 2),
(8, 'Sapphire', 3, 'Hoenn', 2),
(9, 'Emerald', 3, 'Hoenn', 3),
(10, 'FireRed', 3, 'Kanto', 2),
(11, 'LeafGreen', 3, 'Kanto', 2),
(12, 'Diamond', 4, 'Sinnoh', 2),
(13, 'Pearl', 4, 'Sinnoh', 2),
(14, 'Platinum', 4, 'Sinnoh', 4),
(15, 'HeartGold', 4, 'Johto', 3),
(16, 'SoulSilver', 4, 'Johto', 3),
(17, 'Black', 5, 'Unova', 3),
(18, 'White', 5, 'Unova', 3),
(19, 'Black 2', 5, 'Unova', 4),
(20, 'White 2', 5, 'Unova', 4),
(21, 'X', 6, 'Kalos', 1),
(22, 'Y', 6, 'Kalos', 1),
(23, 'Omega Ruby', 6, 'Hoenn', 1),
(24, 'Alpha Sapphire', 6, 'Hoenn', 1),
(25, 'Sun', 7, 'Alola', 2),
(26, 'Moon', 7, 'Alola', 2),
(27, 'Ultra Sun', 7, 'Alola', 4),
(28, 'Ultra Moon', 7, 'Alola', 4),
(29, 'Let\'s Go Pikachu', 7, 'Kanto', 2),
(30, 'Let\'s Go Eevee', 7, 'Kanto', 2);

-- --------------------------------------------------------

--
-- Table structure for table `challenge`
--

CREATE TABLE `challenge` (
  `challenge_id` int(11) NOT NULL,
  `name` varchar(64) NOT NULL,
  `tier` enum('Gold','Silver','Bronze','Leader') NOT NULL,
  `classification` enum('Multiple Runs','Single Run','Single Battle','Kanto','Johto','Hoenn','Sinnoh','Unova','Kalos','Alola') NOT NULL,
  `description` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `challenge`
--

INSERT INTO `challenge` (`challenge_id`, `name`, `tier`, `classification`, `description`) VALUES
(1, 'The Wrong Generation', 'Bronze', 'Multiple Runs', 'Complete at least two pairs of original games and their remakes (for example, one pair could consist of Red and FireRed).'),
(2, 'Ultimate Edition', 'Bronze', 'Multiple Runs', 'Complete a Nuzlocke of every \'third version\' game (Yellow, Crystal, Emerald, Platinum, Black 2/White 2, Ultra Sun/Ultra Moon).'),
(3, 'Globetrotter', 'Silver', 'Multiple Runs', 'Complete at least one Nuzlocke in every region, with each run having five deaths or fewer.'),
(4, 'Share the Love', 'Silver', 'Multiple Runs', 'Complete a Nuzlocke with every single starter from a generation of your choice (the starter must be on your final team and may not die).'),
(5, 'No Dupes!', 'Gold', 'Multiple Runs', 'Complete at least five Nuzlockes of games that take place in the same region without ever using the same Pokemon twice.'),
(6, 'Deja Vu', 'Gold', 'Multiple Runs', 'Complete two runs with identical final teams, with the runs taking place in different regions.'),
(7, 'High-Five', 'Bronze', 'Single Run', 'Complete a Nuzlocke with a cumulative ruleset difficulty of five or more.'),
(8, 'No Gods or Kings', 'Bronze', 'Single Run', 'Complete a Nuzlocke using only Pokemon ranked B+ or below throughout the run.'),
(9, 'Fiverr', 'Bronze', 'Single Run', 'Complete a Nuzlocke in which you only use five team slots.'),
(10, 'Back to Mono', 'Bronze', 'Single Run', 'Complete a Nuzlocke without using a single dual-type Pokemon.'),
(11, 'Dual of the Fates', 'Bronze', 'Single Run', 'Complete a Nuzlocke using only dual-type Pokemon.'),
(12, 'New Is Always Better', 'Bronze', 'Single Run', 'Complete a Nuzlocke using only Pokemon introduced in the region in which the game takes place (may not be done in Kanto games or Black/White).'),
(13, 'Fair Fight', 'Bronze', 'Single Run', 'When facing a Gym Leader, have only as many Pokemon on your team as they have on theirs.'),
(14, 'That Was Easy', 'Silver', 'Single Run', 'Complete a deathless Nuzlocke of a Level 4 difficulty game.'),
(15, 'Well, Technically...', 'Silver', 'Single Run', 'Complete a Nuzlocke without ever using TMs, move tutors, or move reminders.'),
(16, 'The Four Derps of the Apocalypse', 'Silver', 'Single Run', 'Take your starter, an early-game Bug, an early-game bird, and an early-game rodent to the Hall of Fame without any of them dying.'),
(17, 'The Dark Knight', 'Silver', 'Single Run', 'In every battle against a rival that has a starter Pokemon, use your own starter to take on your opponent’s starter.'),
(18, 'Reconstruction', 'Silver', 'Single Run', 'Recover from losing more than half your team in a single battle by going the rest of the run without another death.'),
(19, 'Go Fish', 'Silver', 'Single Run', 'Complete a Nuzlocke using only Pokemon that you acquired by fishing.'),
(20, 'Team Four Star', 'Silver', 'Single Run', 'Complete a Nuzlocke in which you only use four team slots.'),
(21, 'Extreme Set Mode', 'Gold', 'Single Run', 'Complete a Nuzlocke without ever switching Pokemon out in battle.'),
(22, 'Gotta Catch \'Em All', 'Gold', 'Single Run', 'Successfully catch a Pokemon in every single pre-Elite Four area in the game.'),
(23, 'Deep Blue', 'Gold', 'Single Run', 'Complete a Nuzlocke with a rating of 3000 or higher.'),
(24, 'Oh Heal No', 'Gold', 'Single Run', 'Complete a Nuzlocke without using any Pokemon Centers or non-compulsory healing NPCs. In addition, Pokemon may only go in the box if they have full HP and PP and are not afflicted by any status conditions (catching Pokemon while your team is full is fine). This does not apply to the Generation I games, as the box doesn’t heal Pokemon.'),
(25, 'Unventory', 'Gold', 'Single Run', 'Complete a Nuzlocke without using any items apart from Key Items and HMs.'),
(26, 'Wildlife Preserver', 'Gold', 'Single Run', 'Complete a Nuzlocke without defeating a single wild Pokemon (or catching wild Pokemon that aren’t your first encounter in an area in the Let’s Go games).'),
(27, 'Three\'s a Crowd', 'Gold', 'Single Run', 'Complete a Nuzlocke in which you only use three team slots.'),
(28, 'Mirror Move', 'Bronze', 'Single Battle', 'Defeat a rival, evil team boss, Gym Leader, Elite Four member, or Champion with a team identical to their own.'),
(29, 'You\'ve Got a Friend in Me', 'Bronze', 'Single Battle', 'Use your starter to sweep an Elite Four member or Champion without any setup.'),
(30, 'Run Killer', 'Silver', 'Single Battle', 'Defeat Ultra Necrozma in Ultra Sun or Ultra Moon without losing any team members.'),
(31, 'Team Effort', 'Silver', 'Single Battle', 'Use every single Pokemon on your team in the Champion battle and in every Elite Four battle.'),
(32, 'Untouchable', 'Gold', 'Single Battle', 'Beat the Champion with zero net HP loss and no item use during the battle (held items are fine, though). More than one Pokemon must be used in the battle.'),
(33, 'High Risk, Low Reward', 'Gold', 'Single Battle', 'Sweep a Gym Leader, Elite Four member, or Champion using a Pokemon with a 4x weakness to the opponent’s chosen type (the leader must have at least one Pokemon with a damage-dealing move of their chosen type).'),
(34, 'Brock n\' Roll', 'Leader', 'Kanto', 'Defeat Brock using only Normal-types.'),
(35, 'Mistymeanor', 'Leader', 'Kanto', 'Defeat Misty without using Grass-types or status moves.'),
(36, 'Surge Protector', 'Leader', 'Kanto', 'Defeat Surge without using any Pokemon that resistant or immune to Electric-type moves.'),
(37, 'Amerika the Beautiful', 'Leader', 'Kanto', 'Defeat Erika using only Water-types, excluding Gyarados.'),
(38, 'D.S. al koga', 'Leader', 'Kanto', 'Yellow: Defeat Koga without missing a single move. Other Kanto Games: Defeat Koga by making at least one of his Pokemon use Self-Destruct.'),
(39, 'Sabrina the Cheating Witch', 'Leader', 'Kanto', 'Defeat Sabrina using only a Hitmonlee or Hitmonchan.'),
(40, 'Blaine as Day', 'Leader', 'Kanto', 'Defeat Blaine without a single Burn Heal in your inventory.'),
(41, 'Don Giovanni', 'Leader', 'Kanto', 'Sweep Giovanni with a Poison-type Pokemon.'),
(42, 'Falkner? I Barely Know \'Er!', 'Leader', 'Johto', 'Sweep Falkner with a Zubat.'),
(43, 'Bugsy Mogues', 'Leader', 'Johto', 'Sweep Bugsy with a Togepi or Togetic.'),
(44, 'Whitneysing a Murder', 'Leader', 'Johto', 'GSC: Defeat Whitney by using Rollout. HGSS: Defeat Whitney with Pokemon that have evolved once and are level 20 or under.'),
(45, 'Absolutely Mortyfied', 'Leader', 'Johto', 'Defeat Morty while making at least one of his Pokemon Struggle itself to death.'),
(46, 'How Much Wood Would Chuck Chuck?', 'Leader', 'Johto', 'Defeat Chuck by only using HM moves or TM moves obtained from other Gym Leaders.'),
(47, 'Smooth Jas', 'Leader', 'Johto', 'Defeat Jasmine with a Dark-type Pokemon or a Pokemon that has a Fairy typing in later generations.'),
(48, 'Small Pryce to Pay', 'Leader', 'Johto', 'Defeat Pryce with Pokemon with base stat totals less than or equal to 400.'),
(49, 'I Can See Clairly Now', 'Leader', 'Johto', 'OHKO all of Clair’s Pokemon without having any of your Pokemon over level 45.'),
(50, 'Put On the Red Light, Roxanne', 'Leader', 'Hoenn', 'Defeat Roxanne without using any damage-dealing Water-, Grass-, or Fighting-type moves.'),
(51, 'Brawlyhalla', 'Leader', 'Hoenn', 'Defeat Brawly using only your Granite Cave catch.'),
(52, 'Elementary, My Dear Wattson', 'Leader', 'Hoenn', 'Defeat Wattson without a Fire-, Fighting-, or Ground-type on your team.'),
(53, 'Flannery O\'Verheat', 'Leader', 'Hoenn', 'Defeat Flannery while keeping a Pokemon weak to Fire in battle for at least three full turns.'),
(54, 'Where Norman Has Gone Before', 'Leader', 'Hoenn', 'Defeat Norman by inflicting at least two of his Pokemon with (non-volatile) status conditions.'),
(55, 'Winona Flyder', 'Leader', 'Hoenn', 'Sweep Winona with a Grass-, Bug-, or Fighting-type.'),
(56, 'Tater Tots and Liza Beans', 'Leader', 'Hoenn', 'Defeat Tate and Liza using only spread moves.'),
(57, 'Juan Question: What\'s In Your Wallace?', 'Leader', 'Hoenn', 'Use Solarbeam to KO at least three of Juan’s/Wallace’s Pokemon.'),
(58, 'Noah\'s Roark', 'Leader', 'Sinnoh', 'Defeat Roark and switch out at least three Pokemon against his Cranidos.'),
(59, 'Gardenia of Eden', 'Leader', 'Sinnoh', 'Defeat Gardenia using only your Eterna Forest catch.'),
(60, 'Maylene Mean Fighting Machine', 'Leader', 'Sinnoh', 'Defeat Maylene using only HP draining moves (all non-damaging moves are also fair game).'),
(61, 'Wake Up, Sheeple!', 'Leader', 'Sinnoh', 'Defeat Wake using only Pokemon you can catch in the Great Marsh and their evolutions.'),
(62, 'Fantina of the Opera', 'Leader', 'Sinnoh', 'Defeat Fantina using only Ghost-types.'),
(63, 'BYRONICLE', 'Leader', 'Sinnoh', 'Defeat Byron without using any super effective or STAB moves.'),
(64, 'Candice Day Get Any Worse?', 'Leader', 'Sinnoh', 'Defeat Candice without using any 100% accurate moves.'),
(65, 'Volknerswagen', 'Leader', 'Sinnoh', 'Defeat Volkner using only Pokemon that appear on any of Volkner’s or Flint’s in-game teams.'),
(66, 'Watercress Salad with Cilantro and Chili Flakes', 'Leader', 'Unova', 'Defeat Chili, Cress, or Cilan using only your starter.'),
(67, 'Lenora Sphere', 'Leader', 'Unova', 'Defeat Lenora with one of your Pokemon surviving a boosted Retaliate from her Watchog (may not be in the Roggenrola line).'),
(68, 'Iceburgh Lettuce', 'Leader', 'Unova', 'Defeat Burgh using only Bug-type Pokemon.'),
(69, 'Queen Elesabeth II', 'Leader', 'Unova', 'Defeat Elesa without any of your Pokemon ever getting paralyzed.'),
(70, 'Exclaydrill', 'Leader', 'Unova', 'Defeat Clay without using any super effective moves.'),
(71, 'Skyla White', 'Leader', 'Unova', 'Sweep Skyla with a Pokemon weak to Flying.'),
(72, 'Alpha Brycentauri', 'Leader', 'Unova', 'Sweep Brycen with a Ground-type.'),
(73, 'Dr. Drayden feat. Iris Cube', 'Leader', 'Unova', 'Defeat Drayden or Iris without using moves that do neutral damage.'),
(74, 'I Think I\'ve Found Myself a Cherenleader', 'Leader', 'Unova', 'Defeat Cheren without using your starter or Floccesy Ranch catch.'),
(75, 'Roxie You Like a Hurricane', 'Leader', 'Unova', 'Defeat Roxie and get all of your Pokemon poisoned in the process.'),
(76, 'Marlon Off-Brando', 'Leader', 'Unova', 'Defeat Marlon with a Pokemon that can learn Shell Smash.'),
(77, 'Rule Violation', 'Leader', 'Kalos', 'Defeat Viola with an early-route rodent or bug.'),
(78, 'Flagrant Foul', 'Leader', 'Kalos', 'Defeat Grant with a fossil Pokemon.'),
(79, 'Korrina-Gadda-Da-Vida', 'Leader', 'Kalos', 'Defeat Korrina with a Pokemon weak to Fighting.'),
(80, 'Esperamos!', 'Leader', 'Kalos', 'Defeat Ramos without using any moves above 60 base power.'),
(81, 'Oh My Darlin\' Clemontine', 'Leader', 'Kalos', 'Defeat Clemont with only Flying- or Water-types.'),
(82, 'High Valeriean', 'Leader', 'Kalos', 'Defeat Valerie using only Dragon-types.'),
(83, 'The Twelve Olympians', 'Leader', 'Kalos', 'Defeat Olympia in exactly twelve moves.'),
(84, 'Beowulfric', 'Leader', 'Kalos', 'Defeat Wulfric with one Pokemon, and use only special moves against his Cryogonal and only physical moves against his Avalugg.'),
(85, 'Hala At Your Boy', 'Leader', 'Alola', 'Defeat Hala at the Pokemon League with a Pokemon you used against him in his kahuna battle.'),
(86, 'Oliviability Rankings', 'Leader', 'Alola', 'Defeat Olivia using only D Rank or E Rank Pokemon.'),
(87, 'Tunanudle Casserole', 'Leader', 'Alola', 'Defeat Nanu using Pokemon you obtained by fishing.'),
(88, 'If You\'re Hapu and You Know It', 'Leader', 'Alola', 'Defeat Hapu with Pokemon that appear in Totem Battles, whether as Totem Pokemon or assist Pokemon.');

-- --------------------------------------------------------

--
-- Table structure for table `party`
--

CREATE TABLE `party` (
  `run_id` int(11) NOT NULL,
  `pokemon_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `party`
--

INSERT INTO `party` (`run_id`, `pokemon_id`) VALUES
(1, 261),
(2, 147),
(2, 161),
(2, 182),
(2, 198),
(2, 200),
(2, 202);

-- --------------------------------------------------------

--
-- Table structure for table `player`
--

CREATE TABLE `player` (
  `player_id` int(11) NOT NULL,
  `username` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  `email` varchar(255) DEFAULT NULL,
  `link` varchar(255) DEFAULT NULL,
  `discord` varchar(32) DEFAULT NULL,
  `rating` int(11) DEFAULT '1000',
  `runs_completed` int(11) DEFAULT '0',
  `title_id` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `player`
--

INSERT INTO `player` (`player_id`, `username`, `password`, `email`, `link`, `discord`, `rating`, `runs_completed`, `title_id`) VALUES
(2, 'Xerxos', '1e17e2bf3e22716ebacc844fde9111cc7e3a97f1babd78f4abb6ff90482505d8cf04d0b94fa7954c4f6efa0d96abefe2102b638d8c5977f028060bdf115bcb6e', 'multi.goals@gmail.com', 'https://www.tapatalk.com/groups/nuzlocke_forum/memberlist.php?mode=viewprofile&u=16717', 'Xerxos#5993', 1642, 2, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `player_challenge`
--

CREATE TABLE `player_challenge` (
  `player_id` int(11) NOT NULL,
  `challenge_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `pokemon`
--

CREATE TABLE `pokemon` (
  `pokemon_id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `pokemon`
--

INSERT INTO `pokemon` (`pokemon_id`, `name`) VALUES
(1, 'Venusaur'),
(2, 'Charizard'),
(3, 'Blastoise'),
(4, 'Butterfree'),
(5, 'Beedrill'),
(6, 'Pidgeot'),
(7, 'Raticate'),
(8, 'Alolan Raticate'),
(9, 'Fearow'),
(10, 'Arbok'),
(11, 'Pikachu'),
(12, 'Raichu'),
(13, 'Alolan Raichu'),
(14, 'Sandslash'),
(15, 'Alolan Sandslash'),
(16, 'Nidoqueen'),
(17, 'Nidoking'),
(18, 'Clefable'),
(19, 'Ninetales'),
(20, 'Alolan Ninetales'),
(21, 'Wigglytuff'),
(22, 'Vileplume'),
(23, 'Parasect'),
(24, 'Venomoth'),
(25, 'Dugtrio'),
(26, 'Alolan Dugtrio'),
(27, 'Persian'),
(28, 'Alolan Persian'),
(29, 'Golduck'),
(30, 'Primeape'),
(31, 'Arcanine'),
(32, 'Poliwrath'),
(33, 'Kadabra'),
(34, 'Alakazam'),
(35, 'Machoke'),
(36, 'Machamp'),
(37, 'Victreebel'),
(38, 'Tentacruel'),
(39, 'Graveler'),
(40, 'Golem'),
(41, 'Alolan Golem'),
(42, 'Rapidash'),
(43, 'Slowbro'),
(44, 'Farfetch\'d'),
(45, 'Dodrio'),
(46, 'Dewgong'),
(47, 'Muk'),
(48, 'Alolan Muk'),
(49, 'Cloyster'),
(50, 'Haunter'),
(51, 'Gengar'),
(52, 'Hypno'),
(53, 'Kingler'),
(54, 'Electrode'),
(55, 'Exeggutor'),
(56, 'Alolan Exeggutor'),
(57, 'Marowak'),
(58, 'Alolan Marowak'),
(59, 'Hitmonlee'),
(60, 'Hitmonchan'),
(61, 'Weezing'),
(62, 'Kangaskhan'),
(63, 'Seaking'),
(64, 'Starmie'),
(65, 'Mr. Mime'),
(66, 'Jynx'),
(67, 'Pinsir'),
(68, 'Tauros'),
(69, 'Gyarados'),
(70, 'Lapras'),
(71, 'Ditto'),
(72, 'Eevee'),
(73, 'Vaporeon'),
(74, 'Jolteon'),
(75, 'Flareon'),
(76, 'Omastar'),
(77, 'Kabutops'),
(78, 'Aerodactyl'),
(79, 'Snorlax'),
(80, 'Articuno'),
(81, 'Zapdos'),
(82, 'Moltres'),
(83, 'Dragonite'),
(84, 'Mewtwo'),
(85, 'Mew'),
(86, 'Meganium'),
(87, 'Typhlosion'),
(88, 'Feraligatr'),
(89, 'Furret'),
(90, 'Noctowl'),
(91, 'Ledian'),
(92, 'Ariados'),
(93, 'Golbat'),
(94, 'Crobat'),
(95, 'Lanturn'),
(96, 'Xatu'),
(97, 'Ampharos'),
(98, 'Bellossom'),
(99, 'Azumarill (Huge Power)'),
(100, 'Azumarill (Thick Fat)'),
(101, 'Sudowoodo'),
(102, 'Politoed'),
(103, 'Jumpluff'),
(104, 'Sunflora'),
(105, 'Quagsire'),
(106, 'Espeon'),
(107, 'Umbreon'),
(108, 'Slowking'),
(109, 'Unown'),
(110, 'Wobbuffet'),
(111, 'Girafarig'),
(112, 'Forretress'),
(113, 'Dunsparce'),
(114, 'Onix'),
(115, 'Steelix'),
(116, 'Granbull'),
(117, 'Qwilfish'),
(118, 'Scyther'),
(119, 'Scizor'),
(120, 'Shuckle'),
(121, 'Heracross'),
(122, 'Ursaring'),
(123, 'Magcargo'),
(124, 'Corsola'),
(125, 'Octillery'),
(126, 'Delibird'),
(127, 'Mantine'),
(128, 'Skarmory'),
(129, 'Houndoom'),
(130, 'Seadra'),
(131, 'Kingdra'),
(132, 'Donphan'),
(133, 'Stantler'),
(134, 'Smeargle'),
(135, 'Hitmontop'),
(136, 'Miltank'),
(137, 'Chansey'),
(138, 'Blissey'),
(139, 'Raikou'),
(140, 'Entei'),
(141, 'Suicune'),
(142, 'Tyranitar'),
(143, 'Lugia'),
(144, 'Ho-Oh'),
(145, 'Celebi'),
(146, 'Sceptile'),
(147, 'Blaziken'),
(148, 'Swampert'),
(149, 'Mightyena'),
(150, 'Linoone'),
(151, 'Beautifly'),
(152, 'Dustox'),
(153, 'Ludicolo'),
(154, 'Shiftry'),
(155, 'Swellow'),
(156, 'Pelipper'),
(157, 'Gardevoir'),
(158, 'Masquerain'),
(159, 'Breloom'),
(160, 'Slaking'),
(161, 'Ninjask'),
(162, 'Shedinja'),
(163, 'Exploud'),
(164, 'Hariyama'),
(165, 'Delcatty'),
(166, 'Sableye'),
(167, 'Mawile'),
(168, 'Aggron'),
(169, 'Medicham'),
(170, 'Manectric'),
(171, 'Plusle'),
(172, 'Minun'),
(173, 'Volbeat'),
(174, 'Illumise'),
(175, 'Swalot'),
(176, 'Sharpedo'),
(177, 'Wailord'),
(178, 'Camerupt'),
(179, 'Torkoal'),
(180, 'Grumpig'),
(181, 'Spinda'),
(182, 'Flygon'),
(183, 'Cacturne'),
(184, 'Altaria'),
(185, 'Zangoose'),
(186, 'Seviper'),
(187, 'Lunatone'),
(188, 'Solrock'),
(189, 'Whiscash'),
(190, 'Crawdaunt'),
(191, 'Claydol'),
(192, 'Cradily'),
(193, 'Armaldo'),
(194, 'Milotic'),
(195, 'Castform'),
(196, 'Kecleon'),
(197, 'Banette'),
(198, 'Tropius'),
(199, 'Chimecho'),
(200, 'Absol'),
(201, 'Glalie'),
(202, 'Walrein'),
(203, 'Clamperl'),
(204, 'Huntail'),
(205, 'Gorebyss'),
(206, 'Relicanth'),
(207, 'Luvdisc'),
(208, 'Salamence'),
(209, 'Metagross'),
(210, 'Regirock'),
(211, 'Regice'),
(212, 'Registeel'),
(213, 'Latias'),
(214, 'Latios'),
(215, 'Kyogre'),
(216, 'Groudon'),
(217, 'Rayquaza'),
(218, 'Jirachi'),
(219, 'Deoxys'),
(220, 'Torterra'),
(221, 'Infernape'),
(222, 'Empoleon'),
(223, 'Staraptor'),
(224, 'Bibarel'),
(225, 'Kricketune'),
(226, 'Luxray'),
(227, 'Roselia'),
(228, 'Roserade'),
(229, 'Rampardos'),
(230, 'Bastiodon'),
(231, 'Wormadam (Plant Cloak)'),
(232, 'Wormadam (Sandy Cloak)'),
(233, 'Wormadam (Trash Cloak)'),
(234, 'Mothim'),
(235, 'Combee'),
(236, 'Vespiquen'),
(237, 'Pachirisu'),
(238, 'Floatzel'),
(239, 'Cherrim'),
(240, 'Gastrodon'),
(241, 'Aipom'),
(242, 'Ambipom'),
(243, 'Drifblim'),
(244, 'Lopunny'),
(245, 'Misdreavus'),
(246, 'Mismagius'),
(247, 'Murkrow'),
(248, 'Honchkrow'),
(249, 'Purugly'),
(250, 'Skuntank'),
(251, 'Bronzong'),
(252, 'Chatot'),
(253, 'Spiritomb'),
(254, 'Garchomp'),
(255, 'Lucario'),
(256, 'Hippowdon'),
(257, 'Drapion'),
(258, 'Toxicroak'),
(259, 'Carnivine'),
(260, 'Lumineon'),
(261, 'Abomasnow'),
(262, 'Sneasel'),
(263, 'Weavile'),
(264, 'Magneton'),
(265, 'Magnezone'),
(266, 'Lickitung'),
(267, 'Lickilicky'),
(268, 'Rhydon'),
(269, 'Rhyperior'),
(270, 'Tangela'),
(271, 'Tangrowth'),
(272, 'Electabuzz'),
(273, 'Electivire'),
(274, 'Magmar'),
(275, 'Magmortar'),
(276, 'Togetic'),
(277, 'Togekiss'),
(278, 'Yanma'),
(279, 'Yanmega'),
(280, 'Leafeon'),
(281, 'Glaceon'),
(282, 'Gligar'),
(283, 'Gliscor'),
(284, 'Piloswine'),
(285, 'Mamoswine'),
(286, 'Porygon'),
(287, 'Porygon2'),
(288, 'Porygon-Z'),
(289, 'Gallade'),
(290, 'Nosepass'),
(291, 'Probopass'),
(292, 'Dusclops'),
(293, 'Dusknoir'),
(294, 'Froslass'),
(295, 'Rotom'),
(296, 'Rotom-Heat'),
(297, 'Rotom-Wash'),
(298, 'Rotom-Frost'),
(299, 'Rotom-Fan'),
(300, 'Rotom-Mow'),
(301, 'Uxie'),
(302, 'Mesprit'),
(303, 'Azelf'),
(304, 'Dialga'),
(305, 'Palkia'),
(306, 'Heatran'),
(307, 'Regigigas'),
(308, 'Giratina'),
(309, 'Giratina-Origin'),
(310, 'Cresselia'),
(311, 'Phione'),
(312, 'Manaphy'),
(313, 'Darkrai'),
(314, 'Shaymin'),
(315, 'Shaymin-Sky'),
(316, 'Arceus'),
(317, 'Victini'),
(318, 'Serperior'),
(319, 'Emboar'),
(320, 'Samurott'),
(321, 'Watchog'),
(322, 'Stoutland'),
(323, 'Liepard'),
(324, 'Simisage'),
(325, 'Simisear'),
(326, 'Simipour'),
(327, 'Musharna'),
(328, 'Unfezant'),
(329, 'Zebstrika'),
(330, 'Boldore'),
(331, 'Gigalith'),
(332, 'Swoobat'),
(333, 'Excadrill'),
(334, 'Audino'),
(335, 'Gurdurr'),
(336, 'Conkeldurr'),
(337, 'Seismitoad'),
(338, 'Throh'),
(339, 'Sawk'),
(340, 'Leavanny'),
(341, 'Scolipede'),
(342, 'Whimsicott'),
(343, 'Lilligant'),
(344, 'Basculin'),
(345, 'Krookodile'),
(346, 'Darmanitan'),
(347, 'Darmanitan-Zen'),
(348, 'Maractus'),
(349, 'Crustle'),
(350, 'Scrafty'),
(351, 'Sigilyph'),
(352, 'Cofagrigus'),
(353, 'Carracosta'),
(354, 'Archeops'),
(355, 'Garbodor'),
(356, 'Zoroark'),
(357, 'Cinccino'),
(358, 'Gothitelle'),
(359, 'Reuniclus'),
(360, 'Swanna'),
(361, 'Vanilluxe'),
(362, 'Sawsbuck'),
(363, 'Emolga'),
(364, 'Karrablast'),
(365, 'Escavalier'),
(366, 'Amoonguss'),
(367, 'Jellicent'),
(368, 'Alomomola'),
(369, 'Galvantula'),
(370, 'Ferrothorn'),
(371, 'Klinklang'),
(372, 'Eelektross'),
(373, 'Beheeyem'),
(374, 'Chandelure'),
(375, 'Haxorus'),
(376, 'Beartic'),
(377, 'Cryogonal'),
(378, 'Shelmet'),
(379, 'Accelgor'),
(380, 'Stunfisk'),
(381, 'Mienshao'),
(382, 'Druddigon'),
(383, 'Golurk'),
(384, 'Bisharp'),
(385, 'Bouffalant'),
(386, 'Braviary'),
(387, 'Mandibuzz'),
(388, 'Heatmor'),
(389, 'Durant'),
(390, 'Zweilous'),
(391, 'Hydreigon'),
(392, 'Larvesta'),
(393, 'Volcarona'),
(394, 'Cobalion'),
(395, 'Terrakion'),
(396, 'Virizion'),
(397, 'Tornadus'),
(398, 'Tornadus-Therian'),
(399, 'Thundurus'),
(400, 'Thundurus-Therian'),
(401, 'Reshiram'),
(402, 'Zekrom'),
(403, 'Landorus'),
(404, 'Landorus-Therian'),
(405, 'Kyurem'),
(406, 'Kyurem-Black'),
(407, 'Kyurem-White'),
(408, 'Keldeo'),
(409, 'Meloetta'),
(410, 'Genesect'),
(411, 'Chesnaught'),
(412, 'Delphox'),
(413, 'Greninja'),
(414, 'Ash Greninja'),
(415, 'Diggersby'),
(416, 'Talonflame'),
(417, 'Vivillon'),
(418, 'Pyroar'),
(419, 'Florges'),
(420, 'Gogoat'),
(421, 'Pangoro'),
(422, 'Furfrou'),
(423, 'Meowstic'),
(424, 'Aegislash'),
(425, 'Spritzee'),
(426, 'Aromatisse'),
(427, 'Swirlix'),
(428, 'Slurpuff'),
(429, 'Malamar'),
(430, 'Barbaracle'),
(431, 'Dragalge'),
(432, 'Clawitzer'),
(433, 'Heliolisk'),
(434, 'Tyrantrum'),
(435, 'Aurorus'),
(436, 'Sylveon'),
(437, 'Hawlucha'),
(438, 'Dedenne'),
(439, 'Carbink'),
(440, 'Goodra'),
(441, 'Klefki'),
(442, 'Phantump'),
(443, 'Trevenant'),
(444, 'Pumpkaboo'),
(445, 'Gourgeist'),
(446, 'Avalugg'),
(447, 'Noivern'),
(448, 'Xerneas'),
(449, 'Yveltal'),
(450, 'Zygarde'),
(451, 'Zygarde 10%'),
(452, 'Zygarde Complete'),
(453, 'Diancie'),
(454, 'Hoopa'),
(455, 'Hoopa Unbound'),
(456, 'Volcanion'),
(457, 'Decidueye'),
(458, 'Incineroar'),
(459, 'Primarina'),
(460, 'Toucannon'),
(461, 'Gumshoos'),
(462, 'Vikavolt'),
(463, 'Crabominable'),
(464, 'Oricorio'),
(465, 'Ribombee'),
(466, 'Lycanroc Midday'),
(467, 'Lycanroc Midnight'),
(468, 'Lyranroc Dusk'),
(469, 'Wishiwashi'),
(470, 'Toxapex'),
(471, 'Mudsdale'),
(472, 'Araquanid'),
(473, 'Lurantis'),
(474, 'Shiinotic'),
(475, 'Salandit (?)'),
(476, 'Salazzle'),
(477, 'Bewear'),
(478, 'Tsareena'),
(479, 'Comfey'),
(480, 'Oranguru'),
(481, 'Passimian'),
(482, 'Golisopod'),
(483, 'Palossand'),
(484, 'Pyukumuku'),
(485, 'Type: Null'),
(486, 'Silvally'),
(487, 'Minior'),
(488, 'Komala'),
(489, 'Turtonator'),
(490, 'Togedemaru'),
(491, 'Mimikyu'),
(492, 'Bruxish'),
(493, 'Drampa'),
(494, 'Dhelmise'),
(495, 'Kommo-o'),
(496, 'Tapu Koko'),
(497, 'Tapu Lele'),
(498, 'Tapu Bulu'),
(499, 'Tapu Fini'),
(500, 'Solgaleo'),
(501, 'Lunala'),
(502, 'Nihilego'),
(503, 'Buzzwole'),
(504, 'Pheromosa'),
(505, 'Xurkitree'),
(506, 'Celesteela'),
(507, 'Kartana'),
(508, 'Guzzlord'),
(509, 'Necrozma'),
(510, 'Necrozma Dusk Mane'),
(511, 'Necrozma Dawn Wings'),
(512, 'Necrozma Ultra'),
(513, 'Magearna'),
(514, 'Marshadow'),
(515, 'Naganadel'),
(516, 'Stakataka'),
(517, 'Blacephalon'),
(518, 'Zeraora');

-- --------------------------------------------------------

--
-- Table structure for table `pokemon_rank`
--

CREATE TABLE `pokemon_rank` (
  `pokemon_id` int(11) NOT NULL,
  `basegame_id` int(11) NOT NULL,
  `rank` enum('S','A+','A','A-','B+','B','B-','C+','C','C-','D','E') NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `pokemon_rank`
--

INSERT INTO `pokemon_rank` (`pokemon_id`, `basegame_id`, `rank`) VALUES
(1, 1, 'A+'),
(1, 2, 'A+'),
(1, 3, 'A+'),
(1, 10, 'A+'),
(1, 11, 'A+'),
(2, 1, 'A'),
(2, 2, 'A'),
(2, 3, 'A'),
(2, 10, 'A'),
(2, 11, 'A'),
(3, 1, 'A+'),
(3, 2, 'A+'),
(3, 3, 'A+'),
(3, 10, 'A+'),
(3, 11, 'A+'),
(4, 1, 'D'),
(4, 2, 'D'),
(4, 3, 'D'),
(4, 4, 'C+'),
(4, 5, 'E'),
(4, 6, 'C'),
(4, 10, 'B-'),
(4, 11, 'B-'),
(5, 1, 'C-'),
(5, 2, 'C-'),
(5, 4, 'D'),
(5, 5, 'D'),
(5, 6, 'D'),
(5, 10, 'D'),
(5, 11, 'D'),
(6, 1, 'D'),
(6, 2, 'D'),
(6, 3, 'D'),
(6, 4, 'C'),
(6, 5, 'C'),
(6, 6, 'C'),
(6, 10, 'C+'),
(6, 11, 'C+'),
(7, 1, 'B'),
(7, 2, 'B'),
(7, 3, 'B'),
(7, 4, 'C'),
(7, 5, 'C'),
(7, 6, 'C+'),
(7, 10, 'C+'),
(7, 11, 'C+'),
(9, 1, 'A-'),
(9, 2, 'A-'),
(9, 3, 'A-'),
(9, 4, 'A'),
(9, 5, 'A'),
(9, 6, 'A'),
(9, 10, 'B+'),
(9, 11, 'B+'),
(10, 1, 'D'),
(10, 2, 'D'),
(10, 4, 'C-'),
(10, 5, 'C-'),
(10, 6, 'D'),
(10, 10, 'C-'),
(11, 3, 'D'),
(12, 1, 'B'),
(12, 2, 'B'),
(12, 4, 'E'),
(12, 5, 'E'),
(12, 6, 'B+'),
(12, 7, 'B'),
(12, 8, 'B'),
(12, 9, 'B'),
(12, 10, 'B'),
(12, 11, 'B'),
(12, 12, 'B+'),
(12, 13, 'B+'),
(12, 14, 'B+'),
(13, 25, 'A'),
(13, 26, 'A'),
(14, 1, 'A-'),
(14, 2, 'A-'),
(14, 3, 'A-'),
(14, 4, 'B-'),
(14, 6, 'B-'),
(14, 7, 'C'),
(14, 8, 'C'),
(14, 9, 'C'),
(14, 11, 'B-'),
(16, 1, 'S'),
(16, 2, 'S'),
(16, 3, 'S'),
(16, 4, 'A+'),
(16, 5, 'A+'),
(16, 6, 'A+'),
(16, 10, 'A+'),
(16, 11, 'A+'),
(17, 1, 'S'),
(17, 2, 'S'),
(17, 3, 'S'),
(17, 4, 'A+'),
(17, 5, 'A+'),
(17, 6, 'A+'),
(17, 10, 'A+'),
(17, 11, 'A+'),
(18, 1, 'S'),
(18, 2, 'S'),
(18, 3, 'S'),
(18, 4, 'D'),
(18, 5, 'D'),
(18, 6, 'A+'),
(18, 10, 'A'),
(18, 11, 'A'),
(18, 12, 'A'),
(18, 13, 'A'),
(18, 14, 'A'),
(19, 2, 'B+'),
(19, 5, 'D'),
(19, 7, 'B'),
(19, 8, 'B'),
(19, 9, 'B'),
(19, 11, 'B'),
(21, 1, 'D'),
(21, 2, 'D'),
(21, 3, 'D'),
(21, 4, 'E'),
(21, 5, 'E'),
(21, 6, 'D'),
(21, 7, 'D'),
(21, 8, 'D'),
(21, 9, 'D'),
(21, 10, 'D'),
(21, 11, 'D'),
(22, 1, 'A-'),
(22, 3, 'A-'),
(22, 4, 'D'),
(22, 5, 'D'),
(22, 6, 'B-'),
(22, 7, 'B'),
(22, 8, 'B'),
(22, 9, 'B'),
(22, 10, 'B'),
(23, 1, 'D'),
(23, 2, 'D'),
(23, 3, 'D'),
(23, 4, 'D'),
(23, 5, 'D'),
(23, 6, 'D'),
(23, 10, 'D'),
(23, 11, 'D'),
(24, 1, 'C'),
(24, 2, 'C'),
(24, 3, 'C+'),
(24, 4, 'C+'),
(24, 5, 'C+'),
(24, 6, 'C+'),
(24, 10, 'C+'),
(24, 11, 'C+'),
(25, 1, 'B-'),
(25, 2, 'B-'),
(25, 3, 'B-'),
(25, 4, 'E'),
(25, 5, 'E'),
(25, 6, 'E'),
(25, 10, 'C-'),
(25, 11, 'C-'),
(27, 2, 'C'),
(27, 5, 'C'),
(27, 6, 'C'),
(27, 10, 'C'),
(27, 11, 'C'),
(29, 1, 'B'),
(29, 2, 'B'),
(29, 3, 'B'),
(29, 4, 'B+'),
(29, 5, 'B+'),
(29, 6, 'A-'),
(29, 7, 'B+'),
(29, 8, 'B+'),
(29, 9, 'B+'),
(29, 10, 'A-'),
(29, 12, 'A-'),
(29, 13, 'A-'),
(29, 14, 'A-'),
(30, 1, 'C-'),
(30, 2, 'C-'),
(30, 3, 'C'),
(30, 4, 'D'),
(30, 10, 'C'),
(30, 11, 'C'),
(31, 1, 'A-'),
(31, 3, 'B'),
(31, 4, 'C-'),
(31, 6, 'A'),
(31, 10, 'A'),
(32, 1, 'A'),
(32, 2, 'A'),
(32, 3, 'A'),
(32, 4, 'C+'),
(32, 5, 'C+'),
(32, 6, 'A'),
(32, 10, 'A'),
(32, 11, 'A'),
(33, 1, 'A+'),
(33, 2, 'A+'),
(33, 3, 'A+'),
(33, 4, 'B+'),
(33, 5, 'B+'),
(33, 6, 'B+'),
(33, 7, 'C+'),
(33, 8, 'C+'),
(33, 9, 'C+'),
(33, 10, 'B'),
(33, 11, 'B'),
(33, 12, 'B'),
(33, 13, 'B'),
(33, 14, 'B'),
(34, 1, 'S'),
(34, 2, 'S'),
(34, 3, 'S'),
(34, 4, 'S'),
(34, 5, 'S'),
(34, 6, 'S'),
(34, 7, 'A-'),
(34, 8, 'A-'),
(34, 9, 'A-'),
(34, 10, 'S'),
(34, 11, 'S'),
(34, 12, 'A+'),
(34, 13, 'A+'),
(34, 14, 'A+'),
(35, 1, 'C+'),
(35, 2, 'C+'),
(35, 3, 'C+'),
(35, 4, 'B-'),
(35, 5, 'B-'),
(35, 6, 'B-'),
(35, 7, 'C+'),
(35, 8, 'C+'),
(35, 9, 'C+'),
(35, 10, 'C+'),
(35, 11, 'C+'),
(35, 12, 'C+'),
(35, 13, 'C+'),
(35, 14, 'C+'),
(36, 1, 'A-'),
(36, 2, 'A-'),
(36, 3, 'A-'),
(36, 4, 'A'),
(36, 5, 'A'),
(36, 6, 'A+'),
(36, 7, 'A'),
(36, 8, 'A'),
(36, 9, 'A'),
(36, 10, 'A'),
(36, 11, 'A'),
(36, 12, 'A'),
(36, 13, 'A'),
(36, 14, 'A'),
(37, 2, 'A-'),
(37, 4, 'C-'),
(37, 5, 'C-'),
(37, 6, 'C+'),
(37, 11, 'C'),
(38, 1, 'A+'),
(38, 2, 'A+'),
(38, 3, 'A+'),
(38, 4, 'A+'),
(38, 5, 'A+'),
(38, 6, 'A+'),
(38, 7, 'A+'),
(38, 8, 'A+'),
(38, 9, 'A+'),
(38, 10, 'A'),
(38, 11, 'A'),
(38, 12, 'A+'),
(38, 13, 'A+'),
(38, 14, 'A+'),
(39, 1, 'B'),
(39, 2, 'B'),
(39, 3, 'B'),
(39, 4, 'B+'),
(39, 5, 'B+'),
(39, 6, 'B+'),
(39, 7, 'C-'),
(39, 8, 'C-'),
(39, 9, 'C-'),
(39, 10, 'C'),
(39, 11, 'C'),
(39, 12, 'C-'),
(39, 13, 'C-'),
(39, 14, 'C-'),
(40, 1, 'A+'),
(40, 2, 'A+'),
(40, 3, 'A+'),
(40, 4, 'S'),
(40, 5, 'S'),
(40, 6, 'S'),
(40, 7, 'B+'),
(40, 8, 'B+'),
(40, 9, 'B+'),
(40, 10, 'A-'),
(40, 11, 'A-'),
(40, 12, 'A-'),
(40, 13, 'A-'),
(40, 14, 'A-'),
(42, 1, 'D'),
(42, 2, 'D'),
(42, 3, 'C-'),
(42, 4, 'D'),
(42, 5, 'D'),
(42, 6, 'D'),
(42, 10, 'E'),
(42, 11, 'E'),
(42, 12, 'C+'),
(42, 13, 'C+'),
(42, 14, 'C+'),
(43, 1, 'S'),
(43, 2, 'S'),
(43, 3, 'S'),
(43, 4, 'A-'),
(43, 5, 'A-'),
(43, 6, 'A-'),
(43, 11, 'A+'),
(43, 25, 'C-'),
(43, 26, 'C-'),
(44, 1, 'D'),
(44, 2, 'D'),
(44, 3, 'E'),
(44, 4, 'D'),
(44, 5, 'D'),
(44, 6, 'D'),
(44, 10, 'D'),
(44, 11, 'D'),
(45, 1, 'A'),
(45, 2, 'A'),
(45, 3, 'A'),
(45, 4, 'B'),
(45, 5, 'B'),
(45, 6, 'B+'),
(45, 7, 'B+'),
(45, 8, 'B+'),
(45, 9, 'B+'),
(45, 10, 'A'),
(45, 11, 'A'),
(46, 1, 'A-'),
(46, 2, 'A-'),
(46, 3, 'A-'),
(46, 4, 'B'),
(46, 5, 'B'),
(46, 6, 'B'),
(46, 10, 'B'),
(46, 11, 'B'),
(47, 1, 'D'),
(47, 2, 'D'),
(47, 3, 'D'),
(47, 4, 'C'),
(47, 5, 'C'),
(47, 6, 'D'),
(47, 7, 'B+'),
(47, 8, 'B+'),
(47, 9, 'B+'),
(47, 10, 'B'),
(47, 11, 'B'),
(48, 25, 'B+'),
(48, 26, 'B+'),
(49, 1, 'A+'),
(49, 2, 'A+'),
(49, 3, 'A+'),
(49, 4, 'D'),
(49, 5, 'D'),
(49, 6, 'B-'),
(49, 10, 'B-'),
(50, 1, 'C'),
(50, 2, 'C'),
(50, 3, 'C'),
(50, 4, 'C'),
(50, 5, 'C'),
(50, 6, 'C+'),
(50, 10, 'C'),
(50, 11, 'C'),
(50, 12, 'B-'),
(50, 13, 'B-'),
(50, 14, 'B-'),
(51, 1, 'A'),
(51, 2, 'A'),
(51, 3, 'A'),
(51, 4, 'A+'),
(51, 5, 'A+'),
(51, 6, 'A+'),
(51, 10, 'A+'),
(51, 11, 'A+'),
(51, 12, 'A+'),
(51, 13, 'A+'),
(51, 14, 'A+'),
(51, 25, 'A'),
(51, 26, 'A'),
(52, 1, 'A+'),
(52, 2, 'A+'),
(52, 3, 'A+'),
(52, 4, 'B'),
(52, 5, 'B'),
(52, 6, 'B'),
(52, 10, 'B'),
(52, 11, 'B'),
(53, 1, 'D'),
(53, 2, 'D'),
(53, 3, 'D'),
(53, 4, 'C-'),
(53, 5, 'C-'),
(53, 6, 'C-'),
(53, 10, 'D'),
(53, 11, 'D'),
(54, 1, 'C'),
(54, 2, 'C'),
(54, 3, 'C-'),
(54, 4, 'C-'),
(54, 5, 'C-'),
(54, 6, 'C-'),
(54, 7, 'C'),
(54, 8, 'C'),
(54, 9, 'C'),
(54, 10, 'C'),
(54, 11, 'C'),
(55, 1, 'A'),
(55, 2, 'A'),
(55, 3, 'A'),
(55, 4, 'C-'),
(55, 5, 'C-'),
(55, 6, 'B-'),
(55, 10, 'B'),
(55, 11, 'B'),
(57, 1, 'B'),
(57, 2, 'B'),
(57, 3, 'B'),
(57, 4, 'C'),
(57, 5, 'C'),
(57, 6, 'B'),
(57, 10, 'A'),
(57, 11, 'A'),
(59, 1, 'B'),
(59, 2, 'B'),
(59, 3, 'B'),
(59, 4, 'C'),
(59, 5, 'C'),
(59, 6, 'B'),
(59, 10, 'C+'),
(59, 11, 'C+'),
(60, 1, 'D'),
(60, 2, 'D'),
(60, 3, 'D'),
(60, 4, 'C-'),
(60, 5, 'C-'),
(60, 6, 'D'),
(60, 10, 'B-'),
(60, 11, 'B-'),
(61, 1, 'B-'),
(61, 2, 'B-'),
(61, 4, 'B+'),
(61, 5, 'B+'),
(61, 6, 'B+'),
(61, 7, 'A'),
(61, 8, 'A'),
(61, 9, 'A'),
(61, 10, 'B-'),
(61, 11, 'B-'),
(62, 1, 'B+'),
(62, 2, 'B+'),
(62, 3, 'B+'),
(62, 4, 'D'),
(62, 5, 'D'),
(62, 6, 'D'),
(62, 10, 'A+'),
(62, 11, 'A+'),
(63, 1, 'D'),
(63, 2, 'D'),
(63, 3, 'D'),
(63, 4, 'D'),
(63, 5, 'D'),
(63, 6, 'D'),
(63, 7, 'E'),
(63, 8, 'E'),
(63, 9, 'E'),
(63, 10, 'E'),
(63, 11, 'E'),
(63, 12, 'E'),
(63, 13, 'E'),
(63, 14, 'E'),
(64, 1, 'S'),
(64, 2, 'S'),
(64, 3, 'S'),
(64, 4, 'D'),
(64, 5, 'D'),
(64, 6, 'A-'),
(64, 7, 'A-'),
(64, 8, 'A-'),
(64, 9, 'A-'),
(64, 11, 'S'),
(65, 1, 'A+'),
(65, 2, 'A+'),
(65, 3, 'A+'),
(65, 4, 'E'),
(65, 5, 'E'),
(65, 6, 'D'),
(65, 10, 'B'),
(65, 11, 'B'),
(65, 12, 'B'),
(65, 14, 'B'),
(66, 1, 'A+'),
(66, 2, 'A+'),
(66, 4, 'C'),
(66, 5, 'C'),
(66, 6, 'B+'),
(66, 10, 'A'),
(66, 11, 'A'),
(67, 2, 'C'),
(67, 4, 'C'),
(67, 5, 'C'),
(67, 6, 'B-'),
(67, 7, 'B+'),
(67, 8, 'B+'),
(67, 9, 'B+'),
(67, 11, 'C+'),
(68, 1, 'S'),
(68, 2, 'S'),
(68, 3, 'S'),
(68, 4, 'A-'),
(68, 5, 'A-'),
(68, 6, 'A-'),
(68, 10, 'A+'),
(68, 11, 'A+'),
(69, 1, 'S'),
(69, 2, 'S'),
(69, 3, 'S'),
(69, 4, 'A'),
(69, 5, 'A'),
(69, 6, 'A'),
(69, 7, 'A'),
(69, 8, 'A'),
(69, 9, 'A'),
(69, 10, 'A'),
(69, 11, 'A'),
(69, 12, 'S'),
(69, 13, 'S'),
(69, 14, 'S'),
(70, 1, 'A+'),
(70, 2, 'A+'),
(70, 3, 'A+'),
(70, 4, 'A'),
(70, 5, 'A'),
(70, 6, 'A'),
(70, 10, 'S'),
(70, 11, 'S'),
(71, 1, 'E'),
(71, 2, 'E'),
(71, 3, 'E'),
(71, 4, 'E'),
(71, 5, 'E'),
(71, 6, 'E'),
(71, 10, 'E'),
(71, 11, 'E'),
(71, 25, 'E'),
(71, 26, 'E'),
(73, 1, 'A'),
(73, 2, 'A'),
(73, 3, 'A'),
(73, 4, 'D'),
(73, 5, 'D'),
(73, 6, 'A'),
(73, 10, 'A'),
(73, 11, 'A'),
(74, 1, 'A'),
(74, 2, 'A'),
(74, 3, 'A'),
(74, 4, 'D'),
(74, 5, 'D'),
(74, 6, 'C'),
(74, 10, 'A-'),
(74, 11, 'A-'),
(75, 1, 'A-'),
(75, 2, 'A-'),
(75, 3, 'A-'),
(75, 4, 'E'),
(75, 5, 'E'),
(75, 6, 'B'),
(75, 10, 'B'),
(75, 11, 'B'),
(76, 1, 'B+'),
(76, 2, 'B+'),
(76, 3, 'B+'),
(76, 10, 'D'),
(76, 11, 'D'),
(77, 1, 'C'),
(77, 2, 'C'),
(77, 3, 'C'),
(77, 10, 'D'),
(77, 11, 'D'),
(78, 1, 'E'),
(78, 2, 'E'),
(78, 3, 'E'),
(78, 4, 'D'),
(78, 5, 'D'),
(78, 6, 'D'),
(78, 10, 'D'),
(78, 11, 'D'),
(79, 1, 'S'),
(79, 2, 'S'),
(79, 3, 'S'),
(79, 4, 'A-'),
(79, 5, 'A-'),
(79, 6, 'A-'),
(79, 10, 'S'),
(79, 11, 'S'),
(79, 12, 'A+'),
(79, 13, 'A+'),
(79, 14, 'A+'),
(79, 25, 'D'),
(79, 26, 'D'),
(80, 1, 'S'),
(80, 2, 'S'),
(80, 3, 'S'),
(80, 10, 'A'),
(80, 11, 'A'),
(81, 1, 'S'),
(81, 2, 'S'),
(81, 3, 'S'),
(81, 10, 'A+'),
(81, 11, 'A+'),
(82, 1, 'A'),
(82, 2, 'A'),
(82, 3, 'A'),
(82, 10, 'B+'),
(82, 11, 'B+'),
(83, 1, 'B-'),
(83, 2, 'B-'),
(83, 3, 'B-'),
(83, 4, 'B'),
(83, 5, 'B'),
(83, 6, 'C+'),
(83, 10, 'C'),
(83, 11, 'C'),
(86, 4, 'A'),
(86, 5, 'A'),
(86, 6, 'A'),
(87, 4, 'A+'),
(87, 5, 'A+'),
(87, 6, 'A'),
(88, 4, 'S'),
(88, 5, 'S'),
(88, 6, 'S'),
(89, 4, 'B-'),
(89, 5, 'B-'),
(89, 6, 'C'),
(90, 4, 'C'),
(90, 5, 'C'),
(90, 6, 'B-'),
(90, 12, 'C'),
(90, 13, 'C'),
(90, 14, 'C'),
(91, 5, 'E'),
(91, 6, 'E'),
(91, 25, 'E'),
(91, 26, 'E'),
(92, 4, 'C'),
(92, 5, 'C'),
(92, 6, 'C-'),
(92, 25, 'D'),
(92, 26, 'D'),
(93, 1, 'E'),
(93, 2, 'E'),
(93, 3, 'E'),
(93, 10, 'C-'),
(93, 11, 'C-'),
(94, 4, 'A'),
(94, 5, 'A'),
(94, 6, 'A'),
(94, 7, 'A'),
(94, 8, 'A'),
(94, 9, 'A'),
(94, 12, 'A'),
(94, 13, 'A'),
(94, 14, 'A'),
(94, 25, 'A'),
(94, 26, 'A'),
(95, 4, 'A+'),
(95, 5, 'A+'),
(95, 6, 'A+'),
(95, 7, 'B'),
(95, 8, 'B'),
(95, 9, 'B'),
(96, 4, 'C+'),
(96, 5, 'C+'),
(96, 6, 'C+'),
(96, 7, 'B-'),
(96, 8, 'B-'),
(96, 9, 'B-'),
(97, 4, 'A+'),
(97, 5, 'A+'),
(98, 4, 'C'),
(98, 5, 'C'),
(98, 6, 'C'),
(98, 7, 'C'),
(98, 8, 'C'),
(98, 9, 'C'),
(99, 4, 'E'),
(99, 5, 'E'),
(99, 6, 'D'),
(99, 7, 'B'),
(99, 8, 'B'),
(99, 9, 'B'),
(99, 12, 'B+'),
(99, 13, 'B+'),
(99, 14, 'B+'),
(100, 12, 'D'),
(100, 13, 'D'),
(100, 14, 'D'),
(101, 4, 'B+'),
(101, 5, 'B+'),
(101, 6, 'B+'),
(101, 12, 'B'),
(101, 14, 'B'),
(102, 4, 'B'),
(102, 5, 'B'),
(102, 6, 'A-'),
(103, 4, 'B+'),
(103, 5, 'B+'),
(103, 6, 'B+'),
(104, 4, 'E'),
(104, 5, 'E'),
(104, 6, 'E'),
(105, 4, 'A-'),
(105, 5, 'A-'),
(105, 6, 'B+'),
(105, 12, 'B+'),
(105, 13, 'B+'),
(105, 14, 'B+'),
(106, 4, 'A'),
(106, 5, 'A'),
(106, 6, 'A'),
(107, 4, 'A-'),
(107, 5, 'A-'),
(107, 6, 'A-'),
(108, 4, 'A'),
(108, 5, 'A'),
(108, 6, 'A'),
(108, 25, 'C-'),
(108, 26, 'C-'),
(109, 4, 'E'),
(109, 5, 'E'),
(109, 6, 'E'),
(109, 12, 'E'),
(109, 13, 'E'),
(109, 14, 'E'),
(110, 4, 'E'),
(110, 5, 'E'),
(110, 6, 'E'),
(110, 7, 'D'),
(110, 8, 'D'),
(110, 9, 'D'),
(111, 4, 'B+'),
(111, 5, 'B+'),
(111, 7, 'B+'),
(111, 8, 'B+'),
(111, 9, 'B+'),
(111, 12, 'B+'),
(111, 13, 'B+'),
(111, 14, 'B+'),
(112, 4, 'C+'),
(112, 5, 'C+'),
(112, 6, 'C+'),
(113, 4, 'E'),
(113, 5, 'E'),
(113, 6, 'E'),
(114, 4, 'E'),
(114, 5, 'E'),
(114, 6, 'E'),
(114, 10, 'E'),
(114, 11, 'E'),
(114, 12, 'E'),
(114, 13, 'E'),
(114, 14, 'E'),
(115, 4, 'A'),
(115, 5, 'A'),
(115, 6, 'A+'),
(115, 12, 'A-'),
(115, 13, 'A-'),
(115, 14, 'A-'),
(116, 4, 'B'),
(116, 5, 'B'),
(116, 6, 'A'),
(117, 4, 'D'),
(117, 5, 'D'),
(117, 6, 'C-'),
(118, 1, 'C-'),
(118, 3, 'C-'),
(118, 4, 'B-'),
(118, 5, 'B-'),
(118, 6, 'B'),
(118, 10, 'C+'),
(119, 4, 'A'),
(119, 5, 'A'),
(119, 6, 'A'),
(120, 4, 'D'),
(120, 5, 'D'),
(120, 6, 'D'),
(121, 4, 'B'),
(121, 5, 'B'),
(121, 6, 'B'),
(121, 7, 'C-'),
(121, 8, 'C-'),
(121, 9, 'C-'),
(121, 12, 'A+'),
(121, 13, 'A+'),
(121, 14, 'A+'),
(122, 4, 'B+'),
(122, 6, 'A+'),
(123, 4, 'E'),
(123, 5, 'E'),
(123, 6, 'E'),
(123, 7, 'D'),
(123, 8, 'D'),
(123, 9, 'D'),
(124, 4, 'E'),
(124, 5, 'E'),
(124, 6, 'E'),
(124, 7, 'E'),
(124, 8, 'E'),
(124, 9, 'E'),
(124, 25, 'E'),
(124, 26, 'E'),
(125, 4, 'C-'),
(125, 5, 'C-'),
(125, 12, 'A-'),
(125, 13, 'A-'),
(125, 14, 'A-'),
(126, 4, 'E'),
(126, 5, 'E'),
(126, 6, 'E'),
(126, 25, 'E'),
(126, 26, 'E'),
(127, 4, 'B-'),
(127, 6, 'B'),
(127, 12, 'D'),
(127, 13, 'D'),
(127, 14, 'D'),
(128, 5, 'A+'),
(128, 6, 'A+'),
(128, 7, 'A+'),
(128, 8, 'A+'),
(128, 9, 'A+'),
(129, 4, 'D'),
(129, 5, 'D'),
(129, 6, 'D'),
(130, 1, 'C+'),
(130, 2, 'C+'),
(130, 3, 'C+'),
(130, 4, 'D'),
(130, 5, 'D'),
(130, 6, 'C+'),
(130, 7, 'D'),
(130, 8, 'D'),
(130, 9, 'D'),
(130, 10, 'C'),
(130, 11, 'C'),
(131, 4, 'B'),
(131, 5, 'B'),
(131, 6, 'B+'),
(131, 7, 'C'),
(131, 8, 'C'),
(131, 9, 'C'),
(132, 5, 'B'),
(132, 6, 'A'),
(132, 7, 'B-'),
(132, 8, 'B-'),
(132, 9, 'B-'),
(133, 4, 'B+'),
(133, 5, 'B+'),
(133, 6, 'B'),
(134, 4, 'D'),
(134, 5, 'D'),
(134, 6, 'D'),
(134, 25, 'E'),
(134, 26, 'E'),
(135, 4, 'D'),
(135, 5, 'D'),
(135, 6, 'D'),
(136, 4, 'A'),
(136, 5, 'A'),
(136, 6, 'A'),
(137, 1, 'A-'),
(137, 2, 'A-'),
(137, 3, 'A-'),
(137, 4, 'E'),
(137, 5, 'E'),
(137, 10, 'D'),
(137, 11, 'D'),
(138, 4, 'D'),
(138, 5, 'D'),
(138, 6, 'D'),
(138, 12, 'A-'),
(138, 13, 'A-'),
(138, 14, 'A-'),
(138, 25, 'D'),
(138, 26, 'D'),
(139, 4, 'A'),
(139, 5, 'A'),
(139, 6, 'A'),
(140, 4, 'A'),
(140, 5, 'A'),
(140, 6, 'A'),
(141, 4, 'A+'),
(141, 5, 'A+'),
(141, 6, 'S'),
(142, 4, 'E'),
(142, 5, 'E'),
(142, 6, 'C'),
(143, 4, 'S'),
(143, 5, 'S'),
(143, 6, 'A+'),
(144, 4, 'S'),
(144, 5, 'S'),
(144, 6, 'E'),
(146, 7, 'A'),
(146, 8, 'A'),
(146, 9, 'A'),
(147, 7, 'A+'),
(147, 8, 'A+'),
(147, 9, 'A+'),
(148, 7, 'S'),
(148, 8, 'S'),
(148, 9, 'S'),
(149, 7, 'C'),
(149, 8, 'C'),
(149, 9, 'C'),
(150, 7, 'A'),
(150, 8, 'A'),
(150, 9, 'A'),
(151, 7, 'C'),
(151, 8, 'C'),
(151, 9, 'C'),
(151, 12, 'C-'),
(151, 13, 'C-'),
(151, 14, 'C-'),
(152, 7, 'C'),
(152, 8, 'C'),
(152, 9, 'C'),
(152, 12, 'C-'),
(152, 13, 'C-'),
(152, 14, 'C-'),
(153, 8, 'B+'),
(153, 9, 'B+'),
(154, 7, 'C+'),
(154, 8, 'C+'),
(154, 9, 'C+'),
(155, 7, 'A-'),
(155, 8, 'A-'),
(155, 9, 'A-'),
(156, 7, 'B'),
(156, 8, 'B'),
(156, 9, 'B'),
(156, 12, 'D'),
(156, 13, 'D'),
(156, 14, 'D'),
(156, 25, 'B+'),
(156, 26, 'B+'),
(157, 7, 'A'),
(157, 8, 'A'),
(157, 9, 'A'),
(158, 7, 'C-'),
(158, 8, 'C-'),
(158, 9, 'C-'),
(159, 7, 'B'),
(159, 8, 'B'),
(159, 9, 'B'),
(160, 7, 'B+'),
(160, 8, 'B+'),
(160, 9, 'B+'),
(161, 7, 'B+'),
(161, 8, 'B+'),
(161, 9, 'B+'),
(162, 7, 'D'),
(162, 8, 'D'),
(162, 9, 'D'),
(163, 7, 'B'),
(163, 8, 'B'),
(163, 9, 'B'),
(164, 7, 'A-'),
(164, 8, 'A-'),
(164, 9, 'A-'),
(165, 7, 'E'),
(165, 8, 'E'),
(165, 9, 'E'),
(166, 8, 'C+'),
(166, 9, 'C+'),
(167, 7, 'C+'),
(167, 8, 'C+'),
(167, 9, 'C+'),
(168, 7, 'A'),
(168, 8, 'A'),
(168, 9, 'A'),
(169, 7, 'B'),
(169, 8, 'B'),
(169, 12, 'B-'),
(169, 13, 'B-'),
(169, 14, 'B-'),
(170, 7, 'A'),
(170, 8, 'A'),
(170, 9, 'A'),
(171, 7, 'D'),
(171, 8, 'D'),
(171, 9, 'D'),
(172, 7, 'C-'),
(172, 8, 'C-'),
(172, 9, 'C-'),
(173, 7, 'C-'),
(173, 8, 'C-'),
(173, 9, 'C-'),
(174, 7, 'C-'),
(174, 8, 'C-'),
(174, 9, 'C-'),
(175, 7, 'B'),
(175, 8, 'B'),
(175, 9, 'B'),
(176, 7, 'B'),
(176, 8, 'B'),
(176, 9, 'B'),
(177, 7, 'B-'),
(177, 8, 'B-'),
(177, 9, 'B-'),
(178, 7, 'B'),
(178, 8, 'B'),
(178, 9, 'B'),
(179, 7, 'C+'),
(179, 8, 'C+'),
(179, 9, 'C+'),
(180, 7, 'B+'),
(180, 8, 'B+'),
(180, 9, 'B+'),
(181, 7, 'E'),
(181, 8, 'E'),
(181, 9, 'E'),
(181, 25, 'E'),
(181, 26, 'E'),
(182, 7, 'B+'),
(182, 8, 'B+'),
(182, 9, 'B+'),
(183, 7, 'C'),
(183, 8, 'C'),
(183, 9, 'C'),
(184, 7, 'B'),
(184, 8, 'B'),
(184, 9, 'B'),
(185, 7, 'A-'),
(186, 8, 'B'),
(186, 9, 'B'),
(187, 8, 'B'),
(188, 7, 'B'),
(188, 9, 'B'),
(189, 7, 'A-'),
(189, 8, 'A-'),
(189, 9, 'A-'),
(189, 12, 'A-'),
(189, 13, 'A-'),
(189, 14, 'A-'),
(190, 7, 'B'),
(190, 8, 'B'),
(190, 9, 'B'),
(191, 7, 'B-'),
(191, 8, 'B-'),
(191, 9, 'B-'),
(192, 7, 'B-'),
(192, 8, 'B-'),
(192, 9, 'B-'),
(193, 7, 'C+'),
(193, 8, 'C+'),
(193, 9, 'C+'),
(194, 7, 'A+'),
(194, 8, 'A+'),
(194, 9, 'A+'),
(195, 7, 'C-'),
(195, 8, 'C-'),
(195, 9, 'C-'),
(196, 7, 'C-'),
(196, 8, 'C-'),
(196, 9, 'C-'),
(197, 7, 'C+'),
(197, 8, 'C+'),
(197, 9, 'C+'),
(198, 7, 'B'),
(198, 8, 'B'),
(198, 9, 'B'),
(199, 7, 'E'),
(199, 8, 'E'),
(199, 9, 'E'),
(199, 12, 'D'),
(199, 13, 'D'),
(199, 14, 'D'),
(200, 7, 'C+'),
(200, 8, 'C+'),
(200, 9, 'C+'),
(201, 7, 'D'),
(201, 8, 'D'),
(201, 9, 'D'),
(202, 7, 'A-'),
(202, 8, 'A-'),
(202, 9, 'A-'),
(203, 7, 'E'),
(203, 8, 'E'),
(203, 9, 'E'),
(204, 7, 'D'),
(204, 8, 'D'),
(204, 9, 'D'),
(205, 7, 'C'),
(205, 8, 'C'),
(205, 9, 'C'),
(206, 7, 'C-'),
(206, 8, 'C-'),
(206, 9, 'C-'),
(207, 7, 'E'),
(207, 8, 'E'),
(207, 9, 'E'),
(207, 25, 'E'),
(207, 26, 'E'),
(208, 7, 'D'),
(208, 8, 'D'),
(208, 9, 'D'),
(210, 7, 'A'),
(210, 8, 'A'),
(210, 9, 'A'),
(211, 7, 'A+'),
(211, 8, 'A+'),
(211, 9, 'A+'),
(212, 7, 'A'),
(212, 8, 'A'),
(212, 9, 'A'),
(215, 8, 'S'),
(216, 7, 'S'),
(217, 9, 'S'),
(220, 12, 'A+'),
(220, 13, 'A+'),
(220, 14, 'A+'),
(221, 12, 'S'),
(221, 13, 'S'),
(221, 14, 'S'),
(222, 12, 'A'),
(222, 13, 'A'),
(222, 14, 'A'),
(223, 12, 'S'),
(223, 13, 'S'),
(223, 14, 'S'),
(224, 12, 'A'),
(224, 13, 'A'),
(224, 14, 'A'),
(225, 12, 'D'),
(225, 13, 'D'),
(225, 14, 'D'),
(226, 12, 'B'),
(226, 13, 'B'),
(226, 14, 'B'),
(227, 7, 'C'),
(227, 8, 'C'),
(227, 9, 'C'),
(228, 12, 'B+'),
(228, 13, 'B+'),
(228, 14, 'B+'),
(229, 12, 'B'),
(229, 14, 'B'),
(230, 13, 'B'),
(230, 14, 'B'),
(231, 12, 'D'),
(231, 13, 'D'),
(231, 14, 'D'),
(232, 12, 'C'),
(232, 13, 'C'),
(232, 14, 'C'),
(233, 12, 'C-'),
(233, 13, 'C-'),
(233, 14, 'C-'),
(234, 12, 'B-'),
(234, 13, 'B-'),
(234, 14, 'B-'),
(235, 12, 'E'),
(235, 13, 'E'),
(235, 14, 'E'),
(236, 12, 'B-'),
(236, 13, 'B-'),
(236, 14, 'B-'),
(237, 12, 'D'),
(237, 13, 'D'),
(237, 14, 'D'),
(238, 12, 'A-'),
(238, 13, 'A-'),
(238, 14, 'A-'),
(239, 12, 'C'),
(239, 13, 'C'),
(239, 14, 'C'),
(240, 12, 'B+'),
(240, 13, 'B+'),
(240, 14, 'B+'),
(241, 4, 'E'),
(241, 5, 'E'),
(241, 6, 'E'),
(242, 12, 'B'),
(242, 13, 'B'),
(242, 14, 'B'),
(243, 12, 'B+'),
(243, 13, 'B+'),
(243, 14, 'B+'),
(244, 12, 'C-'),
(244, 13, 'C-'),
(244, 14, 'C-'),
(245, 4, 'D'),
(245, 5, 'D'),
(245, 6, 'D'),
(246, 12, 'B+'),
(246, 13, 'B+'),
(246, 14, 'B+'),
(247, 4, 'E'),
(247, 5, 'E'),
(247, 6, 'E'),
(248, 12, 'A'),
(249, 12, 'D'),
(249, 13, 'D'),
(249, 14, 'D'),
(250, 12, 'B-'),
(250, 13, 'B-'),
(250, 14, 'B-'),
(251, 12, 'A'),
(251, 13, 'A'),
(251, 14, 'A'),
(252, 12, 'E'),
(252, 13, 'E'),
(252, 14, 'E'),
(253, 12, 'B+'),
(253, 13, 'B+'),
(253, 14, 'B+'),
(254, 12, 'B-'),
(254, 13, 'B-'),
(254, 14, 'B-'),
(255, 12, 'A'),
(255, 13, 'A'),
(255, 14, 'A'),
(256, 12, 'B+'),
(256, 13, 'B+'),
(256, 14, 'B+'),
(257, 12, 'A+'),
(257, 13, 'A+'),
(257, 14, 'A+'),
(258, 12, 'A'),
(258, 13, 'A'),
(258, 14, 'A'),
(259, 12, 'E'),
(259, 13, 'E'),
(259, 14, 'E'),
(260, 12, 'E'),
(260, 13, 'E'),
(260, 14, 'E'),
(261, 12, 'C'),
(261, 13, 'C'),
(261, 14, 'C'),
(262, 4, 'D'),
(262, 5, 'D'),
(262, 6, 'D'),
(263, 12, 'C'),
(263, 13, 'C'),
(263, 14, 'C'),
(264, 1, 'B'),
(264, 2, 'B'),
(264, 3, 'A-'),
(264, 4, 'B'),
(264, 5, 'B'),
(264, 6, 'B'),
(264, 7, 'A'),
(264, 8, 'A'),
(264, 9, 'A'),
(264, 10, 'A'),
(264, 11, 'A'),
(265, 25, 'A'),
(265, 26, 'A'),
(266, 1, 'D'),
(266, 2, 'D'),
(266, 10, 'E'),
(266, 11, 'E'),
(268, 4, 'B+'),
(268, 5, 'B+'),
(268, 6, 'B'),
(268, 7, 'C+'),
(268, 8, 'C+'),
(268, 9, 'C+'),
(268, 10, 'B'),
(268, 11, 'B'),
(270, 10, 'D'),
(270, 11, 'D'),
(272, 4, 'E'),
(272, 5, 'E'),
(272, 6, 'A'),
(272, 10, 'B+'),
(274, 4, 'A'),
(274, 5, 'A'),
(274, 6, 'A'),
(274, 11, 'D'),
(276, 4, 'D'),
(276, 5, 'D'),
(276, 6, 'D'),
(278, 4, 'E'),
(278, 5, 'E'),
(278, 6, 'E'),
(281, 25, 'D'),
(281, 26, 'D'),
(282, 4, 'D'),
(282, 6, 'C-'),
(284, 4, 'B'),
(284, 5, 'B'),
(284, 6, 'B-'),
(286, 4, 'E'),
(286, 5, 'E'),
(286, 6, 'E'),
(286, 10, 'C-'),
(286, 11, 'C-'),
(287, 4, 'C'),
(287, 5, 'C'),
(287, 6, 'C+'),
(290, 7, 'E'),
(290, 8, 'E'),
(290, 9, 'E'),
(292, 7, 'C+'),
(292, 8, 'C+'),
(292, 9, 'C+'),
(301, 12, 'B'),
(301, 13, 'B'),
(301, 14, 'B'),
(302, 12, 'E'),
(302, 13, 'E'),
(302, 14, 'E'),
(303, 12, 'A+'),
(303, 13, 'A+'),
(303, 14, 'A+'),
(304, 12, 'S'),
(305, 13, 'S'),
(318, 17, 'A-'),
(318, 18, 'A-'),
(319, 17, 'A'),
(319, 18, 'A'),
(320, 17, 'A'),
(320, 18, 'A'),
(321, 17, 'B-'),
(321, 18, 'B-'),
(322, 17, 'A+'),
(322, 18, 'A+'),
(323, 17, 'C'),
(323, 18, 'C'),
(324, 17, 'B'),
(324, 18, 'B'),
(325, 17, 'B-'),
(325, 18, 'B-'),
(326, 17, 'B'),
(326, 18, 'B'),
(327, 17, 'B'),
(327, 18, 'B'),
(328, 17, 'C'),
(328, 18, 'C'),
(329, 17, 'B'),
(329, 18, 'B'),
(330, 17, 'B'),
(330, 18, 'B'),
(331, 17, 'A-'),
(331, 18, 'A-'),
(332, 17, 'C'),
(332, 18, 'C'),
(333, 17, 'S'),
(333, 18, 'S'),
(334, 17, 'C-'),
(334, 18, 'C-'),
(335, 17, 'B+'),
(335, 18, 'B+'),
(336, 17, 'A+'),
(336, 18, 'A+'),
(337, 17, 'A'),
(337, 18, 'A'),
(338, 17, 'B+'),
(338, 18, 'B+'),
(339, 17, 'B+'),
(339, 18, 'B+'),
(340, 17, 'A'),
(340, 18, 'A'),
(341, 17, 'A-'),
(341, 18, 'A-'),
(342, 17, 'A-'),
(342, 18, 'A-'),
(343, 17, 'A+'),
(343, 18, 'A+'),
(344, 17, 'C+'),
(344, 18, 'C+'),
(345, 17, 'A+'),
(345, 18, 'A+'),
(346, 17, 'A-'),
(346, 18, 'A-'),
(348, 17, 'C+'),
(348, 18, 'C+'),
(349, 17, 'B'),
(349, 18, 'B'),
(350, 17, 'A'),
(350, 18, 'A'),
(351, 17, 'A'),
(351, 18, 'A'),
(352, 17, 'B'),
(352, 18, 'B'),
(353, 17, 'B+'),
(353, 18, 'B+'),
(354, 17, 'A+'),
(354, 18, 'A+'),
(355, 17, 'C+'),
(355, 18, 'C+'),
(357, 17, 'C'),
(357, 18, 'C'),
(358, 17, 'B'),
(358, 18, 'B'),
(359, 17, 'A-'),
(359, 18, 'A-'),
(360, 17, 'C+'),
(360, 18, 'C+'),
(361, 17, 'B-'),
(361, 18, 'B-'),
(362, 17, 'B'),
(362, 18, 'B'),
(363, 17, 'D'),
(363, 18, 'D'),
(364, 17, 'E'),
(364, 18, 'E'),
(365, 17, 'B'),
(365, 18, 'B'),
(366, 17, 'A'),
(366, 18, 'A'),
(367, 17, 'A+'),
(367, 18, 'A+'),
(368, 17, 'C+'),
(368, 18, 'C+'),
(369, 17, 'A-'),
(369, 18, 'A-'),
(370, 17, 'A+'),
(370, 18, 'A+'),
(371, 17, 'A'),
(371, 18, 'A'),
(372, 17, 'B'),
(372, 18, 'B'),
(373, 17, 'C-'),
(373, 18, 'C-'),
(374, 17, 'A+'),
(374, 18, 'A+'),
(375, 17, 'B+'),
(375, 18, 'B+'),
(376, 17, 'C'),
(376, 18, 'C'),
(377, 17, 'D'),
(377, 18, 'D'),
(378, 17, 'E'),
(378, 18, 'E'),
(379, 17, 'B'),
(379, 18, 'B'),
(380, 17, 'C'),
(380, 18, 'C'),
(381, 17, 'B'),
(381, 18, 'B'),
(382, 17, 'C'),
(382, 18, 'C'),
(383, 17, 'B-'),
(383, 18, 'B-'),
(384, 17, 'A-'),
(384, 18, 'A-'),
(386, 17, 'B'),
(386, 18, 'B'),
(387, 17, 'B-'),
(387, 18, 'B-'),
(388, 17, 'C-'),
(388, 18, 'C-'),
(389, 17, 'B'),
(389, 18, 'B'),
(390, 17, 'D'),
(390, 18, 'D'),
(391, 17, 'D'),
(391, 18, 'D'),
(392, 17, 'D'),
(392, 18, 'D'),
(393, 17, 'D'),
(393, 18, 'D'),
(394, 17, 'A'),
(394, 18, 'A'),
(395, 17, 'B+'),
(395, 18, 'B+'),
(396, 17, 'A'),
(396, 18, 'A'),
(397, 17, 'D'),
(397, 18, 'D'),
(399, 17, 'D'),
(399, 18, 'D'),
(401, 17, 'A'),
(401, 18, 'A'),
(402, 17, 'A'),
(402, 18, 'A'),
(457, 25, 'B+'),
(457, 26, 'B+'),
(458, 25, 'A'),
(458, 26, 'A'),
(459, 25, 'A'),
(459, 26, 'A'),
(460, 25, 'A'),
(460, 26, 'A'),
(461, 25, 'D'),
(461, 26, 'D'),
(462, 25, 'B'),
(462, 26, 'B'),
(464, 25, 'B'),
(464, 26, 'B'),
(465, 25, 'B+'),
(465, 26, 'B+'),
(469, 25, 'A+'),
(469, 26, 'A+'),
(470, 25, 'D'),
(470, 26, 'D'),
(482, 25, 'A'),
(482, 26, 'A'),
(484, 25, 'E'),
(484, 26, 'E');

-- --------------------------------------------------------

--
-- Table structure for table `rule`
--

CREATE TABLE `rule` (
  `rule_id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `difficulty` tinyint(1) NOT NULL,
  `description` text
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `rule`
--

INSERT INTO `rule` (`rule_id`, `name`, `difficulty`, `description`) VALUES
(12, 'Dupes Clause', 0, 'A \'dupe\' (short for duplicate) is a Pokemon which appears as a first encounter but belongs to the same species as a Pokemon that has already been caught. The Dupes Clause means that if the first Pokemon encountered in an area is a dupe, the player may ignore it and catch the first non-dupe encounter instead. The motivation for this rule is to increase the variety of Pokemon on a player\'s team. The Dupes Clause is considered acceptable in a Nuzlocke challenge. Many variants on this rule exist: the rule may be extended to include any Pokemon belonging to the same evolutionary family as a previously caught Pokemon; for a harsher variant, if the first encounter in an area is a dupe, no Pokemon may be captured in the area; the player may get a limited number of tries to find a non-dupe.'),
(13, 'Set Mode', 2, 'Every Pokemon game has two possible ways to play: Switch Mode, which allows you to switch Pokemon after knocking out an opponent, and Set Mode, which doesn\'t give you this option. This makes the game more difficult as it removes the player\'s ability to perform perfectly safe switches. You can toggle between Shift and Set in the in-game Options menu.'),
(14, 'Monotype', 3, 'A variant on the Nuzlocke challenge in which all the Pokemon used must be of the same type. The first encounter rule is often modified so as to allow the first Pokemon of the chosen type in each area to be caught.'),
(15, 'No items in battle', 3, 'The player is not allowed to use any items during battle including healing items, X-items, etc. The use of held items is generally permitted, however.'),
(16, 'Wedlocke', 4, 'A variant on the Nuzlocke challenge based on the idea that Pokemon in the team form romantic partnerships based on the order in which they are caught. Pokemon that are partnered must fight together in \'double\' battles and may not switch out in battle except with their partner. If a party Pokemon does not have a partner, the encounter rules are modified so that a Pokemon of the opposite gender must be caught next. These rules may be altered to allow or require same-sex partnerships. Wedlockes can be notoriously difficult as the player will always essentially be fighting with a team of two Pokemon.'),
(17, 'Level limit', 1, 'A maximum level allowed for the player\'s Pokemon when entering a Gym battle. This level is often based on either the highest-leveled or lowest-leveled Pokemon of the Gym Leader, with further adjustments being up to the player.'),
(18, 'Superless', 4, 'Super effective moves may never be used by the player\'s Pokemon.'),
(19, 'STABless', 4, 'STAB (same-type attack bonus) moves may never be used by the player\'s Pokemon. In other words, damage-dealing moves that have the same type as one of the types of the Pokemon using the move are not permitted.'),
(20, 'Notepad', 3, 'Pokemon cannot be stored in the PC. If the party is full, no additional Pokemon can be caught until a space is opened by a death. This variant is named after Notepad\'s runs (Freddy\'s Blue Nuzlocke and Freddy\'s Gold Nuzlocke). A less strict variant allows spare Pokemon to be captured, but not rotated into the party until one of the party Pokemon dies (see the Teamlocke). A stricter variant lets you catch six Pokemon, but does not allow them to be replaced in the event of a death.'),
(21, 'Teamlocke', 2, 'A variant in which the player is not allowed to remove living Pokemon from their party. The player is still permitted to catch Pokemon when their team is full, a feature that distinguishes Teamlockes from Notepad runs. Essentially, the PC may only be used when the player needs to replace a dead party member.'),
(22, 'No evolution', 4, 'The player is not allowed to evolve any of their Pokemon in any manner. A stricter variant disallows the player from using Pokemon that are evolved forms (for example, a Pidgeotto caught in the wild).'),
(23, 'No starter', 1, 'The player is not allowed to use their starter or its evolutions and must replace it with their first catch.'),
(24, 'Unlocke', 2, 'The player unlocks types upon defeating Gym Leaders, often corresponding to the Gym Leader\'s preferred type. The player may only use Pokemon that have at least one of their types unlocked. A more difficult variant may disallow dual-typed Pokemon from being used until both of their types have been unlocked.'),
(25, 'Alphabetlocke', 1, 'A variant based on the alphabet. If the new capture in a certain area starts with a letter that comes before the first letter in another team member\'s name, you must replace the old team member with the new one. This can be done with Pokemon names, nicknames, or species names. For a more complex version that involves more team-switching, see the ABC-locke.'),
(26, 'ABC-locke', 2, 'Invented by Macktavious and based off of the Alphabetlocke. As explained in the rules for the Black 2 ABC-locke: \'My Pokemon shall be given nicknames starting with a randomly selected letter of the alphabet. My team shall be selected based on the alphabet. I shall have to fill my team based on their Pokemon names (e.g. Bulbasaur). The first six alphabetically will be my party. However, once I enter a new city, or defeat a gym leader, the rule changes, and Pokemon will be selected based on the first letters of their nicknames instead. The second time this happens, they will be selected based on their species name (\'Seed Pokemon\' for Bulbasaur), and after the third time, the cycle will rotate back to their Pokemon names.\''),
(27, 'No fleeing', 1, 'The player is not allowed to ever flee from wild battles. Some variants also require the player to battle every trainer possible.'),
(28, 'Blind run', 2, 'Playing a game ‘blind’ means playing it for the first time without any prior knowledge and without looking anything up about the game.'),
(29, 'Egglocke', 2, 'A variant on the Nuzlocke challenge in which new Pokemon are hatched from unknown eggs rather than captured. Prior to starting the challenge, the player solicits a large number of eggs from other players. Whenever an area is reached where a catch would normally occur, the player may hatch an egg.'),
(30, 'Wonderlocke', 2, 'A variant on the Nuzlocke challenge in which new Pokémon are acquired using the Wonder Trade feature introduced in Pokémon X and Y. The player catches the first Pokémon encountered in each area, but must immediately wonder trade it for a new Pokémon. Depending on the rules used, the player may be allowed to wonder trade the Pokémon again if its level is too high.'),
(31, 'No Exp. Share (Generation 6+)', 2, 'The player must have the Exp. Share off for the duration of the game. Only applicable to Generation 6 and 7 games.'),
(32, 'Soul link', 2, 'A soul link involves two players playing games from the same region simultaneously. Pokemon caught in the same area are linked - if one player has the Pokemon on their team, the other player must as well. In addition, if a Pokemon dies, the other player’s linked Pokemon dies as well.');

-- --------------------------------------------------------

--
-- Table structure for table `ruleset`
--

CREATE TABLE `ruleset` (
  `run_id` int(11) NOT NULL,
  `rule_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `ruleset`
--

INSERT INTO `ruleset` (`run_id`, `rule_id`) VALUES
(2, 12),
(2, 13),
(2, 15);

-- --------------------------------------------------------

--
-- Table structure for table `run`
--

CREATE TABLE `run` (
  `run_id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `link` varchar(255) NOT NULL,
  `deaths` int(11) NOT NULL,
  `player_id` int(11) NOT NULL,
  `basegame_id` int(11) NOT NULL,
  `rating` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `run`
--

INSERT INTO `run` (`run_id`, `name`, `link`, `deaths`, `player_id`, `basegame_id`, `rating`) VALUES
(1, 'Run 1', 'link', 0, 2, 12, 1815),
(2, 'Run 2', 'http://s7.zetaboards.com/Nuzlocke_Forum', 7, 2, 9, 1833);

--
-- Triggers `run`
--
DELIMITER $$
CREATE TRIGGER `update_runs_completed` AFTER INSERT ON `run` FOR EACH ROW UPDATE Player
        SET runs_completed=(SELECT COUNT(*) FROM Run WHERE player_id=NEW.player_id)
        WHERE Player.player_id=NEW.player_id
$$
DELIMITER ;

-- --------------------------------------------------------

--
-- Table structure for table `sessions`
--

CREATE TABLE `sessions` (
  `session_id` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `expires` int(11) UNSIGNED NOT NULL,
  `data` text CHARACTER SET utf8mb4 COLLATE utf8mb4_bin
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `sessions`
--

INSERT INTO `sessions` (`session_id`, `expires`, `data`) VALUES
('I1g7xp2UbvJbh0bR9nRjdZG3EQfEMBMN', 1546787353, '{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"},\"player\":{\"username\":\"Xerxos\",\"id\":2}}'),
('vbZB0L_qSjd4KgFToQFmINQ1FteL7w0m', 1546746239, '{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"},\"player\":{\"username\":\"Xerxos\",\"id\":2}}');

-- --------------------------------------------------------

--
-- Table structure for table `title`
--

CREATE TABLE `title` (
  `title_id` int(11) NOT NULL,
  `name` varchar(32) NOT NULL,
  `abbreviation` varchar(3) NOT NULL,
  `rating_floor` smallint(6) NOT NULL,
  `min_bronze_challenges` tinyint(4) NOT NULL,
  `min_silver_challenges` tinyint(4) NOT NULL,
  `min_gold_challenges` tinyint(4) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `title`
--

INSERT INTO `title` (`title_id`, `name`, `abbreviation`, `rating_floor`, `min_bronze_challenges`, `min_silver_challenges`, `min_gold_challenges`) VALUES
(1, 'Nuzlocke Expert', 'NEX', 2000, 0, 0, 0),
(2, 'Nuzlocke Master', 'NM', 2200, 2, 0, 0),
(3, 'Nuzlocke Elite', 'NE', 2300, 2, 2, 0),
(4, 'Nuzlocke Virtuoso', 'NV', 2400, 3, 3, 0),
(5, 'Nuzlocke Grandmaster', 'NGM', 2500, 3, 3, 3),
(6, 'Nuzlocke Champion', 'NC', 2700, 5, 5, 5);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `basegame`
--
ALTER TABLE `basegame`
  ADD PRIMARY KEY (`basegame_id`);

--
-- Indexes for table `challenge`
--
ALTER TABLE `challenge`
  ADD PRIMARY KEY (`challenge_id`);

--
-- Indexes for table `party`
--
ALTER TABLE `party`
  ADD PRIMARY KEY (`run_id`,`pokemon_id`),
  ADD KEY `pokemon_id` (`pokemon_id`);

--
-- Indexes for table `player`
--
ALTER TABLE `player`
  ADD PRIMARY KEY (`player_id`),
  ADD UNIQUE KEY `username` (`username`),
  ADD KEY `title_id` (`title_id`);

--
-- Indexes for table `player_challenge`
--
ALTER TABLE `player_challenge`
  ADD KEY `player_id` (`player_id`),
  ADD KEY `challenge_id` (`challenge_id`);

--
-- Indexes for table `pokemon`
--
ALTER TABLE `pokemon`
  ADD PRIMARY KEY (`pokemon_id`);

--
-- Indexes for table `pokemon_rank`
--
ALTER TABLE `pokemon_rank`
  ADD PRIMARY KEY (`pokemon_id`,`basegame_id`),
  ADD KEY `basegame_id` (`basegame_id`);

--
-- Indexes for table `rule`
--
ALTER TABLE `rule`
  ADD PRIMARY KEY (`rule_id`);

--
-- Indexes for table `ruleset`
--
ALTER TABLE `ruleset`
  ADD PRIMARY KEY (`run_id`,`rule_id`),
  ADD KEY `rule_id` (`rule_id`);

--
-- Indexes for table `run`
--
ALTER TABLE `run`
  ADD PRIMARY KEY (`run_id`),
  ADD KEY `player_id` (`player_id`),
  ADD KEY `basegame_id` (`basegame_id`);

--
-- Indexes for table `sessions`
--
ALTER TABLE `sessions`
  ADD PRIMARY KEY (`session_id`);

--
-- Indexes for table `title`
--
ALTER TABLE `title`
  ADD PRIMARY KEY (`title_id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `basegame`
--
ALTER TABLE `basegame`
  MODIFY `basegame_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=31;

--
-- AUTO_INCREMENT for table `challenge`
--
ALTER TABLE `challenge`
  MODIFY `challenge_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=89;

--
-- AUTO_INCREMENT for table `player`
--
ALTER TABLE `player`
  MODIFY `player_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT for table `pokemon`
--
ALTER TABLE `pokemon`
  MODIFY `pokemon_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=519;

--
-- AUTO_INCREMENT for table `rule`
--
ALTER TABLE `rule`
  MODIFY `rule_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=33;

--
-- AUTO_INCREMENT for table `run`
--
ALTER TABLE `run`
  MODIFY `run_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT for table `title`
--
ALTER TABLE `title`
  MODIFY `title_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `party`
--
ALTER TABLE `party`
  ADD CONSTRAINT `party_ibfk_1` FOREIGN KEY (`run_id`) REFERENCES `run` (`run_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `party_ibfk_2` FOREIGN KEY (`pokemon_id`) REFERENCES `pokemon` (`pokemon_id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `player`
--
ALTER TABLE `player`
  ADD CONSTRAINT `player_ibfk_1` FOREIGN KEY (`title_id`) REFERENCES `title` (`title_id`);

--
-- Constraints for table `player_challenge`
--
ALTER TABLE `player_challenge`
  ADD CONSTRAINT `player_challenge_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `player` (`player_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `player_challenge_ibfk_2` FOREIGN KEY (`challenge_id`) REFERENCES `challenge` (`challenge_id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `pokemon_rank`
--
ALTER TABLE `pokemon_rank`
  ADD CONSTRAINT `pokemon_rank_ibfk_1` FOREIGN KEY (`pokemon_id`) REFERENCES `pokemon` (`pokemon_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `pokemon_rank_ibfk_2` FOREIGN KEY (`basegame_id`) REFERENCES `basegame` (`basegame_id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `ruleset`
--
ALTER TABLE `ruleset`
  ADD CONSTRAINT `ruleset_ibfk_1` FOREIGN KEY (`run_id`) REFERENCES `run` (`run_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `ruleset_ibfk_2` FOREIGN KEY (`rule_id`) REFERENCES `rule` (`rule_id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `run`
--
ALTER TABLE `run`
  ADD CONSTRAINT `run_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `player` (`player_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `run_ibfk_2` FOREIGN KEY (`basegame_id`) REFERENCES `basegame` (`basegame_id`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
